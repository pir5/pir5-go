// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/pir5/pdns-api/model"
)

// PutRecordsIDReader is a Reader for the PutRecordsID structure.
type PutRecordsIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutRecordsIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutRecordsIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPutRecordsIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutRecordsIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutRecordsIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutRecordsIDOK creates a PutRecordsIDOK with default headers values
func NewPutRecordsIDOK() *PutRecordsIDOK {
	return &PutRecordsIDOK{}
}

/*PutRecordsIDOK handles this case with default header values.

OK
*/
type PutRecordsIDOK struct {
	Payload *model.ModelRecord
}

func (o *PutRecordsIDOK) Error() string {
	return fmt.Sprintf("[PUT /records/{id}][%d] putRecordsIdOK  %+v", 200, o.Payload)
}

func (o *PutRecordsIDOK) GetPayload() *model.ModelRecord {
	return o.Payload
}

func (o *PutRecordsIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ModelRecord)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRecordsIDForbidden creates a PutRecordsIDForbidden with default headers values
func NewPutRecordsIDForbidden() *PutRecordsIDForbidden {
	return &PutRecordsIDForbidden{}
}

/*PutRecordsIDForbidden handles this case with default header values.

Forbidden
*/
type PutRecordsIDForbidden struct {
	Payload model.PdnsAPIHTTPError
}

func (o *PutRecordsIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /records/{id}][%d] putRecordsIdForbidden  %+v", 403, o.Payload)
}

func (o *PutRecordsIDForbidden) GetPayload() model.PdnsAPIHTTPError {
	return o.Payload
}

func (o *PutRecordsIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRecordsIDNotFound creates a PutRecordsIDNotFound with default headers values
func NewPutRecordsIDNotFound() *PutRecordsIDNotFound {
	return &PutRecordsIDNotFound{}
}

/*PutRecordsIDNotFound handles this case with default header values.

Not Found
*/
type PutRecordsIDNotFound struct {
	Payload model.PdnsAPIHTTPError
}

func (o *PutRecordsIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /records/{id}][%d] putRecordsIdNotFound  %+v", 404, o.Payload)
}

func (o *PutRecordsIDNotFound) GetPayload() model.PdnsAPIHTTPError {
	return o.Payload
}

func (o *PutRecordsIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutRecordsIDInternalServerError creates a PutRecordsIDInternalServerError with default headers values
func NewPutRecordsIDInternalServerError() *PutRecordsIDInternalServerError {
	return &PutRecordsIDInternalServerError{}
}

/*PutRecordsIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutRecordsIDInternalServerError struct {
	Payload model.PdnsAPIHTTPError
}

func (o *PutRecordsIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /records/{id}][%d] putRecordsIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutRecordsIDInternalServerError) GetPayload() model.PdnsAPIHTTPError {
	return o.Payload
}

func (o *PutRecordsIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	model "github.com/pir5/pir5-go/healthworker/model"
)

// PutHealthchecksIDReader is a Reader for the PutHealthchecksID structure.
type PutHealthchecksIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutHealthchecksIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewPutHealthchecksIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 403:
		result := NewPutHealthchecksIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPutHealthchecksIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPutHealthchecksIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutHealthchecksIDOK creates a PutHealthchecksIDOK with default headers values
func NewPutHealthchecksIDOK() *PutHealthchecksIDOK {
	return &PutHealthchecksIDOK{}
}

/*PutHealthchecksIDOK handles this case with default header values.

OK
*/
type PutHealthchecksIDOK struct {
	Payload *model.ModelHealthCheck
}

func (o *PutHealthchecksIDOK) Error() string {
	return fmt.Sprintf("[PUT /healthchecks/{id}][%d] putHealthchecksIdOK  %+v", 200, o.Payload)
}

func (o *PutHealthchecksIDOK) GetPayload() *model.ModelHealthCheck {
	return o.Payload
}

func (o *PutHealthchecksIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(model.ModelHealthCheck)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutHealthchecksIDForbidden creates a PutHealthchecksIDForbidden with default headers values
func NewPutHealthchecksIDForbidden() *PutHealthchecksIDForbidden {
	return &PutHealthchecksIDForbidden{}
}

/*PutHealthchecksIDForbidden handles this case with default header values.

Forbidden
*/
type PutHealthchecksIDForbidden struct {
	Payload model.HealthWorkerHTTPError
}

func (o *PutHealthchecksIDForbidden) Error() string {
	return fmt.Sprintf("[PUT /healthchecks/{id}][%d] putHealthchecksIdForbidden  %+v", 403, o.Payload)
}

func (o *PutHealthchecksIDForbidden) GetPayload() model.HealthWorkerHTTPError {
	return o.Payload
}

func (o *PutHealthchecksIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutHealthchecksIDNotFound creates a PutHealthchecksIDNotFound with default headers values
func NewPutHealthchecksIDNotFound() *PutHealthchecksIDNotFound {
	return &PutHealthchecksIDNotFound{}
}

/*PutHealthchecksIDNotFound handles this case with default header values.

Not Found
*/
type PutHealthchecksIDNotFound struct {
	Payload model.HealthWorkerHTTPError
}

func (o *PutHealthchecksIDNotFound) Error() string {
	return fmt.Sprintf("[PUT /healthchecks/{id}][%d] putHealthchecksIdNotFound  %+v", 404, o.Payload)
}

func (o *PutHealthchecksIDNotFound) GetPayload() model.HealthWorkerHTTPError {
	return o.Payload
}

func (o *PutHealthchecksIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutHealthchecksIDInternalServerError creates a PutHealthchecksIDInternalServerError with default headers values
func NewPutHealthchecksIDInternalServerError() *PutHealthchecksIDInternalServerError {
	return &PutHealthchecksIDInternalServerError{}
}

/*PutHealthchecksIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutHealthchecksIDInternalServerError struct {
	Payload model.HealthWorkerHTTPError
}

func (o *PutHealthchecksIDInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /healthchecks/{id}][%d] putHealthchecksIdInternalServerError  %+v", 500, o.Payload)
}

func (o *PutHealthchecksIDInternalServerError) GetPayload() model.HealthWorkerHTTPError {
	return o.Payload
}

func (o *PutHealthchecksIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
